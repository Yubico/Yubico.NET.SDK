# Copyright 2021 Yubico AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Upload documentation to GCP

on: 
  workflow_call:

permissions:
  id-token: write
  contents: read

env:
  IMAGE_REGISTRY_URL: us-docker.pkg.dev
  IMAGE_REGISTRY_PROJECT: support-cluster-769001
  IMAGE_REPOSITORY: yesdk
  IMAGE_NAME: yesdk-docserver

jobs:
  upload_docs:
    runs-on: ubuntu-latest
    steps:
      # Checkout the local repository as we need the Dockerfile and other things even for this step.
      - uses: actions/checkout@v4

      # Grab the just-built documentation artifact and inflate the archive at the expected location.
      - uses: actions/download-artifact@v4
        with:
          name: Documentation
          path: Yubico.YubiKey/docs/_site/

      # Construct the docker image
      - name: Docker build
        run: |
          docker build -t "${IMAGE_NAME}:${{ github.sha }}" .
      
      # Authenticate to Google Cloud
      - name: Authenticate
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GLOBAL_GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: yesdk-ci-builder@support-cluster-769001.iam.gserviceaccount.com

      # Push our docker image to GCP
      - name: Push Docker image
        run: |
          gcloud auth configure-docker ${IMAGE_REGISTRY_URL} --project ${IMAGE_REGISTRY_PROJECT}
          docker tag "${IMAGE_NAME}:${{ github.sha }}" "${IMAGE_REGISTRY_URL}/${IMAGE_REGISTRY_PROJECT}/${IMAGE_REPOSITORY}/${IMAGE_NAME}:${{ github.sha }}"
          docker push "${IMAGE_REGISTRY_URL}/${IMAGE_REGISTRY_PROJECT}/${IMAGE_REPOSITORY}/${IMAGE_NAME}:${{ github.sha }}"
          echo "New image tag: ${{ github.sha }}"
