// Copyright 2021 Yubico AB
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using System;
using System.Security.Cryptography.X509Certificates;
using Yubico.Core.Iso7816;

namespace Yubico.YubiKey.Piv.Commands
{
    /// <summary>
    /// The response to the create attestation statement command, containing the cert
    /// created.
    /// </summary>
    /// <remarks>
    /// This is the partner Response class to
    /// <see cref="CreateAttestationStatementCommand"/>.
    /// <para>
    /// The data returned is an <c>X509Certificate2</c> object. See the
    /// documentation for
    /// <c>System.Security.Cryptography.X509Certificates.X509Certificate2</c> for
    /// information on examining information about the cert.
    /// </para>
    /// <para>
    /// The public key in the certificate is the public key partner to the
    /// private key in the specified slot, and an extension in the certificate is
    /// the serial number of the YubiKey itself. Therefore, it is possible to
    /// attest that the specific private key was generated by the specific
    /// YubiKey.
    /// </para>
    /// <para>
    /// Example:
    /// </para>
    /// <code language="csharp">
    ///   using System.Security.Cryptography.X509Certificates;<br/>
    ///   IYubiKeyConnection connection = key.Connect(YubiKeyApplication.Piv);<br/>
    ///   var createAttestationStatementCommand = new CreateAttestationStatementCommand (0x9A);
    ///   CreateAttestationStatementResponse createAttestationStatementResponse =
    ///       connection.SendCommand(createAttestationStatementCommand);<br/>
    ///   if (createAttestationStatementResponse.Status != ResponseStatus.Success)
    ///   {
    ///     // Handle error
    ///   }
    ///   X509Certificate2 attestationStatement = createAttestationStatementResponse.GetData();
    /// </code>
    /// </remarks>
    public sealed class CreateAttestationStatementResponse : PivResponse, IYubiKeyResponseWithData<X509Certificate2>
    {
        /// <summary>
        /// Constructs a CreateAttestationStatementResponse based on a ResponseApdu
        /// received from the YubiKey.
        /// </summary>
        /// <param name="responseApdu">
        /// The object containing the response APDU<br/>returned by the YubiKey.
        /// </param>
        public CreateAttestationStatementResponse(ResponseApdu responseApdu) :
            base(responseApdu)
        {
        }

        /// <summary>
        /// Gets the attestation statement from the YubiKey response.
        /// </summary>
        /// <returns>
        /// The X.509 cert in the response APDU, presented as a
        /// <c>System.Security.Cryptography.X509Certificates.X509Certificate2</c>.
        /// </returns>
        /// <exception cref="InvalidOperationException">
        /// Thrown when <see cref="YubiKeyResponse.Status"/> is not <see cref="ResponseStatus.Success"/>.
        /// </exception>
        public X509Certificate2 GetData()
        {
            if (Status != ResponseStatus.Success)
            {
                throw new InvalidOperationException(StatusMessage);
            }

            byte[] certData = ResponseApdu.Data.ToArray();
            return new X509Certificate2(certData);
        }
    }
}
